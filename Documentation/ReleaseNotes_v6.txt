RELEASENOTES MARLIN VERSION 6.x
===============================

For releasenotes of the previous main version (5.x), see the separate file "Releasenotes_v5.txt".
This document contains all release notes and remarks beginning with version 6.0. The document
would otherwise grow to large and complex.

Version 6.x contains the new HTTPSYS user mode driver as a HTTPServerAPI replacement
It is tested through the "MarlinServerSync" test program only
----------------------------------------------------------------------------------------------

CHANGES IN VERSION 6.1.1
------------------------
1)  Changed the working of the SiteFilters. Must now return a boolean value (true) to keep going in
    evaluating the SiteHandlers if you want to. So you can terminate the evaluation by:
    - Sending a response
    - Setting the status of the HTTPMessage
    and then return a 'false'. The general handler of HTTPSite will then:
    - Skip the HTTP handlers;
    - Send the return message (if still needed).
2)  Changed the processing of SiteFilters in HTTPSite. SiteFilters can return there own status in the
    HTTPMessage, instead of always producing a status "500 Server error"

CHANGES IN VERSION 6.1.0
------------------------
1)  Added a new sub project "MarlinModule". This module is the one-and-only module to add to IIS
    the *real* DLL with the ServerApp derived project will be loaded by this MarlinModule bij reading
    the 'web.config' node <appSettings><add key="MarlinModule" value="path to the dll" />
2)  Added 32bits and 64bits installers for MarlinModule to extend your IIS environment
3)  Duplicate loading of DLL's is now prevented by the new MarlinModule.
4)  DLL's should always be in a subdirectory under the directory of your 'web.config' file!!
5)  Do not create any "web.config" with your HTTPManager any more. Always use "Marlin.config"
    to prevent any confusion in your environment.
6)  Optionally by prepending a '@' to your DLL path, you can set any absolute path to a dll.
    Please be advised that in this case duplicate DLL's or duplicate application pools are possible,
    but not neccessarily working.
7)  Try to adhere to the following default scheme:
    - 1 Application pool per website
    - 1 web.config per website
    - 1 DLL with a ServerApp derived application per website
    - 1 unique port per website. Do not use duplicate ports in your environment
8)  ZLIB directory for compressed content: varioius small code improvements (SonarQube based)
9)  Fixed double reset of the HTTPClient
10) Fixed leaking handle and leaking critical section resources from "Redirect" class
11) Added application settings to WebConfigIIS to be able to determine the DLL of an application
12) Fixed endless loop in checking of SOAPMessages in incoming WSDL cache
13) Added an check on an XMLElement node name if the name is a valid identifier.

CHANGES IN VERSION 6.0.1
------------------------
1) Upgraded to Visual Studio 2019
2) Small fixes for basic authentication of HTTP calls
3) Default charset of a MultiPart Buffer HTTP Call is "UTF-8"

CHANGES IN VERSION 6.0.0
------------------------
1) Nothing :-) Just a delivery

CHANGES IN VERSION 6.0.0 Beta 2
-------------------------------
1) Keep-alive connections fully operational

CHANGES IN VERSION 6.0.0 Beta 1
-------------------------------
1) NTLM/Digest/Kerberos authtentication working through standard SSPI interfaces
2) Rudementary implementation of keep-alive connections
3) HTTPServer now does send "Date" response header for authentication purposes

CHANGES IN VERSION 6.0.0 Pre-Alpha
----------------------------------
1) The HTTPSYS driver has been added to the project. It is a user mode implementation of the
   standard MS-Windows HTTP-Server-API as serviced by the "HTTP.SYS" kernel mode driver.
   It supports version 2.0 of the HTTPServer-API only.
   The driver was created for various reasons:
   - Educational purposes
   - Non-disclosed functions (websockets)
   - Because it can be done :-)
   Not implemented features of HTTP.SYS are:
   - Asynchronous I/O
   - HTTP 2.0 Server push
   - HTTP-Server-API release 1.0 functions.

   Applications can use the HTTPSYS driver just by altering the LINK input from "httpapi.lib" to "httpsys.lib"
   Nothing else is required to use the driver!

2) Yet to be implemented before we reach the definitive 6.0.0 stage are:
   - NTLM authentication
   - Digest authentication
   - Negotiate/Kerberos authentication
   
   Basic authentication IS working
